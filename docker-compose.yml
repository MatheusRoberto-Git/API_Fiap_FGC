# =================================================================
# Docker Compose para FIAP Cloud Games (FCG)
# Ambiente de desenvolvimento e testes locais
# =================================================================

version: '3.8'

services:
  # ===== API PRINCIPAL =====
  fgc-api:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: fgc-api
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__DefaultConnection=Server=fgc-db;Database=FIAP_FGC;User Id=sa;Password=FgcPass123!;TrustServerCertificate=true;MultipleActiveResultSets=true
      - Jwt__SecretKey=FGC_SuperSecretKey_2024_FIAP_TechChallenge_MinimumLengthRequired32Chars
      - Jwt__Issuer=FGC.API
      - Jwt__Audience=FGC.Client
      - Jwt__ExpireMinutes=120
    depends_on:
      - fgc-db
    networks:
      - fgc-network
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # ===== BANCO DE DADOS =====
  fgc-db:
    image: mcr.microsoft.com/mssql/server:2022-latest
    container_name: fgc-db
    restart: unless-stopped
    ports:
      - "1433:1433"
    environment:
      - ACCEPT_EULA=Y
      - SA_PASSWORD=FgcPass123!
      - MSSQL_PID=Express
    networks:
      - fgc-network
    volumes:
      - fgc-db-data:/var/opt/mssql
    healthcheck:
      test: ["CMD-SHELL", "/opt/mssql-tools/bin/sqlcmd -S localhost -U sa -P FgcPass123! -Q 'SELECT 1' || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 10s

  # ===== PROMETHEUS (Monitoramento) =====
  prometheus:
    image: prom/prometheus:latest
    container_name: fgc-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - fgc-network

  # ===== GRAFANA (Dashboards) =====
  grafana:
    image: grafana/grafana:latest
    container_name: fgc-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
    networks:
      - fgc-network

# ===== VOLUMES =====
volumes:
  fgc-db-data:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

# ===== NETWORKS =====
networks:
  fgc-network:
    driver: bridge